# create and install export header which contains export macros for libraries
#
# available arguments:
#
#    <target>        pattern for generating macro names (<target>_DECLSPEC)
#                    and install paths (include/<target>/Export.h)
#
# In public c++ headers the generated file must be included with
#
#    #include <<target>/Export.h>
#
# and public classes be decorated with
#
#    class <target>_DECLSPEC <classname> ...
#
# @TODO: move to vsg
macro(add_library_export_header _TARGET)
    string(TOUPPER ${_TARGET} TARGET_UPPER)

    include(GenerateExportHeader)
    generate_export_header(${_TARGET}
        EXPORT_MACRO_NAME ${TARGET_UPPER}_DECLSPEC
        EXPORT_FILE_NAME ${VSGWX_BINARY_DIR}/include/${_TARGET}/Export.h
    )
    install(FILES ${VSGWX_BINARY_DIR}/include/${_TARGET}/Export.h DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/${_TARGET})

    # pass the creation mode to the corresponding target in the cmake
    if(NOT BUILD_SHARED_LIBS)
        target_compile_definitions(${_TARGET} INTERFACE ${TARGET_UPPER}_STATIC_DEFINE)
    endif()
endmacro()

set(SOURCES
    ViewerWindow.cpp
)

set(HEADERS
    ../../include/vsgwx/ViewerWindow.h
)

find_package(wxWidgets REQUIRED COMPONENTS net core base)
include(${wxWidgets_USE_FILE})

if(UNIX AND NOT APPLE)
    FIND_PACKAGE(PkgConfig REQUIRED)
    PKG_CHECK_MODULES(GTK3 REQUIRED gtk+-3.0)

    INCLUDE_DIRECTORIES(${GTK3_INCLUDE_DIRS})
    LINK_DIRECTORIES(${GTK3_LIBRARY_DIRS})
endif()

# shared mode is automatically chosen by setting BUILD_SHARED_LIBS=ON
# POSITION_INDEPENDENT_CODE ON is set be default in shared mode
add_library(vsgwx ${SOURCES} ${HEADERS})

# add definitions to enable building vsgQt as part of submodule
add_library(vsgwx::vsgwx ALIAS vsgwx)
set(vsgwx_FOUND TRUE CACHE INTERNAL "vsgwx found.")
set(CMAKE_DISABLE_FIND_PACKAGE_vsgwx TRUE CACHE INTERNAL "Disable find_package(vsgwx) as it's not necessary.")

set_target_properties(vsgwx
    PROPERTIES
        VERSION ${vsgwx_VERSION}
        SOVERSION ${vsgwx_SOVERSION}
        CXX_STANDARD 17
)

target_include_directories(vsgwx
    PUBLIC
        $<BUILD_INTERFACE:${VSGWX_SOURCE_DIR}/include>
        $<BUILD_INTERFACE:${VSGWX_BINARY_DIR}/include>
        $<INSTALL_INTERFACE:include>
)

if(UNIX AND NOT APPLE)
target_link_libraries(vsgwx
    PUBLIC
        vsg::vsg
        ${wxWidgets_LIBRARIES} ${GTK3_LIBRARIES})
else()
target_link_libraries(vsgwx
        PUBLIC
        vsg::vsg)
endif()

add_library_export_header(vsgwx)

install(TARGETS vsgwx ${INSTALL_TARGETS_DEFAULT_FLAGS})
install(DIRECTORY ${VSGWX_SOURCE_DIR}/include/vsgwx DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})

file(WRITE ${VSGWX_BINARY_DIR}/vsgwxConfig.cmake.in "#generated by cmake, do not change\ninclude(\${CMAKE_CURRENT_LIST_DIR}/vsgwxTargets.cmake)\n")
vsg_add_cmake_support_files(
    CONFIG_TEMPLATE ${VSGWX_BINARY_DIR}/vsgwxConfig.cmake.in
)
